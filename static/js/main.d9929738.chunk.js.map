{"version":3,"sources":["logo.svg","App.js","component/home.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Meta","Card","Component","App","Menu","SubMenu","ItemGroup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","_this2","message","then","success","info","setState","react_default","a","createElement","className","menu","mode","Item","key","href","target","rel","card","hoverable","style","width","cover","alt","src","timeline","pending","App_Meta","title","description","reverse","color","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9929738.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {\n    Carousel,\n    message,\n    Button,\n    Skeleton,\n    Switch,\n    Card,\n    Icon,\n    Avatar,\n    Timeline,\n    Menu\n} from 'antd';\n\nimport './App.css';\nimport Home from './component/home';\nconst {Meta} = Card;\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        message\n            .loading('Wait me..', 1.5)\n            .then(() => {\n                message.success('I am Ahsanul', 0)\n                message.info('Full Stack Developer', 0)\n                this.setState({loading: false});\n            });\n    }\n    render() {\n        const {loading} = this.state;\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                <Menu\n        \n        mode=\"horizontal\"\n      >\n        <Menu.Item key=\"mail\">  <a href=\"mailto:auronsanjr@gmail.com\" >Contact Me</a>\n        </Menu.Item>\n        <Menu.Item key=\"alipay\"> <a href=\"https://www.linkedin.com/in/auronsan/\" target=\"_blank\" rel=\"noopener noreferrer\">Linkedin</a>\n        </Menu.Item>\n      </Menu>\n                </header>\n                {loading && <section className=\"bodyContent\">\n                    <div className=\"avatarContent\" >\n                        <Card\n                            loading={loading}\n                            hoverable\n                            style={{\n                            width: 240\n                        }}\n                            cover={< img alt = \"example\" src = \"https://media.licdn.com/dms/image/C5103AQE6ehXge7s7qQ/profile-displayphoto-shrink_200_200/0?e=1554336000&v=beta&t=e7JIX6fSQ1cb4SUxPk25LGT2WdLboOB_JG4L-fAowyo\" />}>\n                            \n                        </Card>\n                    </div>\n                    <div>\n                        <Timeline pending=\"Loading...\"></Timeline>\n                    </div>\n                </section>}\n                {!loading &&\n                <section className=\"bodyContent\"  >\n                \n                    <div className=\"avatarContent\">\n                        <Card\n                            hoverable\n                            style={{\n                            width: 240\n                        }}\n                            cover={\n                            < img alt = \"Anshor\" src = \"https://media.licdn.com/dms/image/C5103AQE6ehXge7s7qQ/profile-displayphoto-shrink_200_200/0?e=1554336000&v=beta&t=e7JIX6fSQ1cb4SUxPk25LGT2WdLboOB_JG4L-fAowyo\" />\n                            }>\n                            <Meta title=\"\" description=\"https://auronsan.github.io./\"/>\n                        </Card>\n                    </div>\n                    <div>\n                      <h1>Working Experiences</h1>\n                        <Timeline pending=\"Search Happy Client..\" reverse>\n                            <Timeline.Item color=\"red\">\n                                <p><a href=\"https://wegen-energy.com\" target=\"_blank\" >Wegen Energy</a></p>\n                                <p> Full Stack Developer : JS,HTML5,CSS, NodeJS</p>\n                            </Timeline.Item>\n\n                            <Timeline.Item color=\"red\">\n                                <p><a href=\"https://doctor.help\" target=\"_blank\" >Doctor.help </a></p>\n                                <p> Full Stack Developer : JS,HTML5,CSS, Python</p>\n                            </Timeline.Item>\n\n\n                            <Timeline.Item>\n                                <p><a href=\"https://vietnamworks.com\" target=\"_blank\" >Vietnamworks.com </a></p>\n                                <p> Full Stack Developer  : JS,HTML5,CSS, PHP, Python, Golang</p>\n                            </Timeline.Item>\n\n                        </Timeline>\n                    </div>\n                </section>}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport {\n    Carousel,\n    message,\n    Button,\n    Skeleton,\n    Switch,\n    Card,\n    Icon,\n    Avatar,\n    Timeline\n} from 'antd';\n\nconst {Meta} = Card;\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n}\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}